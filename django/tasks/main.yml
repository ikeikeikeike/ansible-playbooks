---

#### Environment

- name: Create home directory
  file: path={{app_home}} state=directory 
        owner={{username}} group={{username}} mode=0755

- name: Create django var directory
  file: path={{app_home}}/var state=directory 
        owner={{username}} group={{username}} mode=0755

- name: Create django log directory
  file: path={{app_home}}/var/log state=directory 
        owner={{username}} group={{username}} mode=0755

- name: Create django run directory
  file: path={{app_home}}/var/run state=directory 
        owner={{username}} group={{username}} mode=0755

#### Source code

- name: install dependencies...
  apt: name={{ item }} state=installed update_cache=yes
  with_items:
    - mercurial
  when: env != 'vagrant'

- name: Pull request to a project tree
  hg: repo={{hg_repo}}
      dest={{app_home}}/{{app_name}}
      force=yes
  sudo_user: '{{username}}'
  when: env != 'vagrant'

#### Django

- name: check if virtualenv already exists
  stat: path={{app_home}}/venv
  register: venv_dir
  sudo_user: '{{username}}'

- name: create virtualenv for Django web app
  shell: "virtualenv-3.4 -p `which python3` {{app_home}}/venv"
  when: venv_dir.stat.isdir is not defined
  sudo_user: '{{username}}'

- name: install web application dependencies for django
  pip: requirements={{app_home}}/{{app_name}}/requirements/general.txt 
       virtualenv={{app_home}}/venv
  sudo_user: '{{username}}'

- name: install web application dependencies for development
  pip: requirements={{app_home}}/{{app_name}}/requirements/dev.txt
       virtualenv={{app_home}}/venv
  sudo_user: '{{username}}'

- name: install web application dependencies for testing
  pip: requirements={{app_home}}/{{app_name}}/requirements/test.txt
       virtualenv={{app_home}}/venv
  sudo_user: '{{username}}'

- name: Django syncdb
  django_manage: 'command=syncdb app_path={{app_path}} 
                  virtualenv={{app_home}}/venv settings={{app_settings}}'
  sudo_user: '{{username}}'

- name: Django migrate
  django_manage: 'command=migrate app_path={{app_path}} 
                  virtualenv={{app_home}}/venv settings={{app_settings}}'
  sudo_user: '{{username}}'

- name: Django collectstatic
  django_manage: 'command=collectstatic app_path={{app_path}}
                  virtualenv={{app_home}}/venv settings={{app_settings}}'
  sudo_user: '{{username}}'

### Gunicorn

- name: Add Gunicorn configuration for upstart.
  template: src=gunicorn.conf.j2
            dest=/etc/init/gunicorn.conf

- name: register gunicorn service
  service: name=gunicorn state=started enabled=yes
  ignore_errors: yes
